require 'yaml'
require 'JSON'

def run(script)
  puts "\n> #{script}".yellow
  sh script
end

# Sets up Emission for building

lane :setup do
  run('git clone https://github.com/artsy/emission.git')
  Dir.chdir 'emission' do
    # Emission runs React out of the node modules
    run('yarn install')
  end

  Dir.chdir 'emission/example' do
    # Emissions native deps depend on CocoaPods
    run('pod install')
  end
end

lane :update_signing do
  match(type: 'appstore')
end

lane :setup_signing do
  match(type: 'appstore', readonly: true)
end

lane :stamp_plist do
  plist = 'emission/Example/Emission/Info.plist'

  # Increment build number to current date
  build_number = Time.new.strftime('%Y.%m.%d.%H')
  `/usr/libexec/PlistBuddy -c "Set CFBundleVersion #{build_number}" "#{plist}"`
end

lane :ship do
  unless ENV['SLACK_URL']
    raise "You need to set SLACK_URL (#{ENV['SLACK_URL']}) in your environment."
  end

  unless ENV['FASTLANE_USERNAME'] && ENV['FASTLANE_PASSWORD']
    raise 'You need to set FASTLANE_USERNAME and FASTLANE_PASSWORD in your environment'
  end

  stamp_plist

  changelog = 'emission/CHANGELOG.md'
  upcoming_release_notes = File.read(changelog).lines[0...12].join("\n")

  # Build
  gym workspace: 'mmission/Example/Emission.xcworkspace', configuration: 'Release', scheme: 'Emission'

  # Log into iTunes connection, get the latest version of the app we shipped, and how many builds we've sent too
  Spaceship::Tunes.login(ENV['FASTLANE_USERNAME'], ENV['FASTLANE_PASSWORD'])
  app = Spaceship::Tunes::Application.find('net.artsy.Emission')
  latest_version = app.build_trains.keys.sort.last
  train = app.build_trains[latest_version]
  build_version = train.builds.count + 1

  # Do a tag, we use a http git remote so we can have push access
  # as the default remote for circle is read-only
  tag = "deploy-#{latest_version}-#{build_version}"
  `git tag -d "#{tag}"`

  add_git_tag tag: tag
  `git remote add http https://github.com/artsy/emission.git`
  `git push http #{tag}`

  pilot changelog: release_notes

  slack message: 'There is a new Emission beta available. Grab it from Testflight on your iOS device.',
        channel: 'collector-gmv',
        payload: {
          'Version' => latest_version,
          "What's new" => upcoming_release_notes
        },
        default_payloads: []
end
