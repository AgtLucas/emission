diff --git a/node_modules/react-native/Libraries/Alert/AlertIOS.js b/node_modules/react-native/Libraries/Alert/AlertIOS.js
index 4a81430..ddabfd0 100644
--- a/node_modules/react-native/Libraries/Alert/AlertIOS.js
+++ b/node_modules/react-native/Libraries/Alert/AlertIOS.js
@@ -207,11 +207,11 @@ class AlertIOS {
         'keyboardType) and the old syntax will be removed in a future version.');
 
       var callback = type;
-      var defaultValue = message;
+      var deprecateDefaultValue = message;
       RCTAlertManager.alertWithArgs({
         title: title || undefined,
         type: 'plain-text',
-        defaultValue,
+        deprecateDefaultValue,
       }, (id, value) => {
         callback(value);
       });
@@ -257,4 +257,4 @@ class AlertIOS {
   }
 }
 
-module.exports = AlertIOS;
+module.exports = AlertIOS;
\ No newline at end of file
diff --git a/node_modules/react-native/Libraries/Core/Timers/JSTimers.js b/node_modules/react-native/Libraries/Core/Timers/JSTimers.js
index 73b6c12..436f604 100644
--- a/node_modules/react-native/Libraries/Core/Timers/JSTimers.js
+++ b/node_modules/react-native/Libraries/Core/Timers/JSTimers.js
@@ -241,7 +241,7 @@ const JSTimers = {
   setTimeout: function(
     func: Function,
     duration: number,
-    ...args?: any
+    ...args: any
   ): number {
     if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
       console.warn(
@@ -267,7 +267,7 @@ const JSTimers = {
   setInterval: function(
     func: Function,
     duration: number,
-    ...args?: any
+    ...args: any
   ): number {
     if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
       console.warn(
@@ -290,7 +290,7 @@ const JSTimers = {
    * @param {function} func Callback to be invoked before the end of the
    * current JavaScript execution loop.
    */
-  setImmediate: function(func: Function, ...args?: any) {
+  setImmediate: function(func: Function, ...args: any) {
     const id = _allocateCallback(
       () => func.apply(undefined, args),
       'setImmediate',
